name: Build

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'releases/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

# Allow to stop obsolete workflows
concurrency:
  group: ci-buildtrain-${{ github.ref }}-1
  cancel-in-progress: true

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_build_arch: [ linux/arm64 , linux/amd64 ]
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{github.repository}}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge,branch=main,prefix=releases-
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU (arm64)
        if: runner.arch != 'arm64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up QEMU (x64)
        if: runner.arch != 'x64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ matrix.docker_build_arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
